{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Reactjs\\\\form\\\\src\\\\components\\\\ValidationForm.js\";\nimport React from \"react\";\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  emailError: \"\"\n};\nexport default class ValiationForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleChange = event => {\n      const isCheckbox = event.target.type === \"checkbox\";\n      this.setState({\n        [event.target.name]: isCheckbox ? event.target.checked : event.target.value\n      });\n    };\n\n    this.validate = () => {\n      let emailError = \"\";\n      var format = /^[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]*$/;\n\n      if (!this.state.email) {\n        emailError = \"email cannot be blank\";\n      }\n\n      if (!this.state.email.includes(\"@\")) {\n        emailError = \"invalid email\";\n      }\n\n      if (this.state.email.includes(\" \")) {\n        emailError = \"invalid email\";\n      } // if (this.state.email.match(format)) {\n      //   emailError = \"invalid email\";\n      // }\n\n\n      return true;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        console.log(this.state); // clear form\n\n        this.setState(initialState);\n      }\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //   <Form\n      //   name=\"basic\"\n      //   labelCol={{\n      //     span: 8,\n      //   }}\n      //   wrapperCol={{\n      //     span: 16,\n      //   }}\n      //   initialValues={{\n      //     remember: true,\n      //   }}\n      // >\n      //   <Form.Item onSubmit={this.handleSubmit}\n      //     name=\"email\"\n      //     placeholder=\"email\"\n      //     value={this.state.email}\n      //     onChange={this.handleChange}\n      //   >\n      //     <Input />\n      //   </Form.Item>\n      //   <Form.Item\n      //     label=\"Password\"\n      //     name=\"password\"\n      //     rules={[\n      //       {\n      //         required: true,\n      //         message: 'Please input your password!',\n      //       },\n      //     ]}\n      //   >\n      //     <Input.Password />\n      //   </Form.Item>\n      //   <Form.Item\n      //     name=\"remember\"\n      //     valuePropName=\"checked\"\n      //     wrapperCol={{\n      //       offset: 8,\n      //       span: 16,\n      //     }}\n      //   >\n      //     <Checkbox>Remember me</Checkbox>\n      //   </Form.Item>\n      //   <Form.Item\n      //     wrapperCol={{\n      //       offset: 8,\n      //       span: 16,\n      //     }}\n      //   >\n      //     <Button type=\"primary\" htmlType=\"submit\">\n      //       Submit\n      //     </Button>\n      //   </Form.Item>\n      // </Form>\n      _jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            placeholder: \"name\",\n            value: this.state.name,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              color: \"red\"\n            },\n            children: this.state.nameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            placeholder: \"email\",\n            value: this.state.email,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              color: \"red\"\n            },\n            children: this.state.emailError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"password\",\n            value: this.state.password,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              color: \"red\"\n            },\n            children: this.state.passwordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ADMIN/Reactjs/form/src/components/ValidationForm.js"],"names":["React","Form","Input","Button","Checkbox","initialState","email","password","emailError","ValiationForm","Component","state","handleChange","event","isCheckbox","target","type","setState","name","checked","value","validate","format","includes","handleSubmit","preventDefault","isValid","console","log","render","fontSize","color","nameError","passwordError"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  emailError: \"\",\r\n};\r\n\r\nexport default class ValiationForm extends React.Component {\r\n  state = initialState;\r\n\r\n  handleChange = event => {\r\n    const isCheckbox = event.target.type === \"checkbox\";\r\n    this.setState({\r\n      [event.target.name]: isCheckbox\r\n        ? event.target.checked\r\n        : event.target.value\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    let emailError = \"\";\r\n    var format = /^[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]*$/;\r\n\r\n\r\n    if (!this.state.email) {\r\n      emailError = \"email cannot be blank\";\r\n    }\r\n\r\n\r\n    if (!this.state.email.includes(\"@\")) {\r\n      emailError = \"invalid email\";\r\n    }\r\n    if (this.state.email.includes(\" \")) {\r\n      emailError = \"invalid email\";\r\n    }\r\n    // if (this.state.email.match(format)) {\r\n    //   emailError = \"invalid email\";\r\n    // }\r\n\r\n\r\n    return true;\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const isValid = this.validate();\r\n    if (isValid) {\r\n      console.log(this.state);\r\n      // clear form\r\n      this.setState(initialState);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n    //   <Form\r\n    //   name=\"basic\"\r\n    //   labelCol={{\r\n    //     span: 8,\r\n    //   }}\r\n    //   wrapperCol={{\r\n    //     span: 16,\r\n    //   }}\r\n    //   initialValues={{\r\n    //     remember: true,\r\n    //   }}\r\n    // >\r\n    //   <Form.Item onSubmit={this.handleSubmit}\r\n    //     name=\"email\"\r\n    //     placeholder=\"email\"\r\n    //     value={this.state.email}\r\n    //     onChange={this.handleChange}\r\n    //   >\r\n    //     <Input />\r\n    //   </Form.Item>\r\n\r\n    //   <Form.Item\r\n    //     label=\"Password\"\r\n    //     name=\"password\"\r\n    //     rules={[\r\n    //       {\r\n    //         required: true,\r\n    //         message: 'Please input your password!',\r\n    //       },\r\n    //     ]}\r\n    //   >\r\n    //     <Input.Password />\r\n    //   </Form.Item>\r\n\r\n    //   <Form.Item\r\n    //     name=\"remember\"\r\n    //     valuePropName=\"checked\"\r\n    //     wrapperCol={{\r\n    //       offset: 8,\r\n    //       span: 16,\r\n    //     }}\r\n    //   >\r\n    //     <Checkbox>Remember me</Checkbox>\r\n    //   </Form.Item>\r\n\r\n    //   <Form.Item\r\n    //     wrapperCol={{\r\n    //       offset: 8,\r\n    //       span: 16,\r\n    //     }}\r\n    //   >\r\n    //     <Button type=\"primary\" htmlType=\"submit\">\r\n    //       Submit\r\n    //     </Button>\r\n    //   </Form.Item>\r\n    // </Form>\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div>\r\n          <input\r\n            name=\"name\"\r\n            placeholder=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n          <div style={{ fontSize: 12, color: \"red\" }}>\r\n            {this.state.nameError}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <input\r\n            name=\"email\"\r\n            placeholder=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n          />\r\n          <div style={{ fontSize: 12, color: \"red\" }}>\r\n            {this.state.emailError}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n          />\r\n          <div style={{ fontSize: 12, color: \"red\" }}>\r\n            {this.state.passwordError}\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\">submit</button>\r\n      </form>\r\n      \r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}