{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Reactjs\\\\form\\\\src\\\\components\\\\ValidationForm.js\";\nimport React from \"react\";\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  emailError: \"\"\n};\nexport default class ValiationForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleChange = event => {\n      const isCheckbox = event.target.type === \"checkbox\";\n      this.setState({\n        [event.target.name]: isCheckbox ? event.target.checked : event.target.value\n      });\n    };\n\n    this.validate = () => {\n      let emailError = \"\";\n      var format = /^[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]*$/;\n\n      if (!this.state.email) {\n        emailError = \"email cannot be blank\";\n      }\n\n      if (!this.state.email.includes(\"@\")) {\n        emailError = \"invalid email\";\n      }\n\n      if (this.state.email.includes(\" \")) {\n        emailError = \"invalid email\";\n      }\n\n      if (this.state.email.match(format)) {\n        emailError = \"invalid email\";\n      }\n\n      return true;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        console.log(this.state); // clear form\n\n        this.setState(initialState);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      name: \"basic\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      initialValues: {\n        remember: true\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        onSubmit: this.handleSubmit,\n        name: \"email\",\n        placeholder: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"remember\",\n        valuePropName: \"checked\",\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this) // <form onSubmit={this.handleSubmit}>\n    //   <div>\n    //     <input\n    //       name=\"name\"\n    //       placeholder=\"name\"\n    //       value={this.state.name}\n    //       onChange={this.handleChange}\n    //     />\n    //     <div style={{ fontSize: 12, color: \"red\" }}>\n    //       {this.state.nameError}\n    //     </div>\n    //   </div>\n    //   <div>\n    //     <input\n    //       name=\"email\"\n    //       placeholder=\"email\"\n    //       value={this.state.email}\n    //       onChange={this.handleChange}\n    //     />\n    //     <div style={{ fontSize: 12, color: \"red\" }}>\n    //       {this.state.emailError}\n    //     </div>\n    //   </div>\n    //   <div>\n    //     <input\n    //       type=\"password\"\n    //       name=\"password\"\n    //       placeholder=\"password\"\n    //       value={this.state.password}\n    //       onChange={this.handleChange}\n    //     />\n    //     <div style={{ fontSize: 12, color: \"red\" }}>\n    //       {this.state.passwordError}\n    //     </div>\n    //   </div>\n    //   <button type=\"submit\">submit</button>\n    // </form>\n    ;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ADMIN/Reactjs/form/src/components/ValidationForm.js"],"names":["React","Form","Input","Button","Checkbox","initialState","email","password","emailError","ValiationForm","Component","state","handleChange","event","isCheckbox","target","type","setState","name","checked","value","validate","format","includes","match","handleSubmit","preventDefault","isValid","console","log","render","span","remember","required","message","offset"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  emailError: \"\",\r\n};\r\n\r\nexport default class ValiationForm extends React.Component {\r\n  state = initialState;\r\n\r\n  handleChange = event => {\r\n    const isCheckbox = event.target.type === \"checkbox\";\r\n    this.setState({\r\n      [event.target.name]: isCheckbox\r\n        ? event.target.checked\r\n        : event.target.value\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    let emailError = \"\";\r\n    var format = /^[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]*$/;\r\n\r\n\r\n    if (!this.state.email) {\r\n      emailError = \"email cannot be blank\";\r\n    }\r\n\r\n\r\n    if (!this.state.email.includes(\"@\")) {\r\n      emailError = \"invalid email\";\r\n    }\r\n    if (this.state.email.includes(\" \")) {\r\n      emailError = \"invalid email\";\r\n    }\r\n    if (this.state.email.match(format)) {\r\n      emailError = \"invalid email\";\r\n    }\r\n\r\n\r\n    return true;\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const isValid = this.validate();\r\n    if (isValid) {\r\n      console.log(this.state);\r\n      // clear form\r\n      this.setState(initialState);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form\r\n      name=\"basic\"\r\n      labelCol={{\r\n        span: 8,\r\n      }}\r\n      wrapperCol={{\r\n        span: 16,\r\n      }}\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n    >\r\n      <Form.Item onSubmit={this.handleSubmit}\r\n        name=\"email\"\r\n        placeholder=\"email\"\r\n        value={this.state.email}\r\n        onChange={this.handleChange}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"remember\"\r\n        valuePropName=\"checked\"\r\n        wrapperCol={{\r\n          offset: 8,\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Checkbox>Remember me</Checkbox>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        wrapperCol={{\r\n          offset: 8,\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n      // <form onSubmit={this.handleSubmit}>\r\n      //   <div>\r\n      //     <input\r\n      //       name=\"name\"\r\n      //       placeholder=\"name\"\r\n      //       value={this.state.name}\r\n      //       onChange={this.handleChange}\r\n      //     />\r\n      //     <div style={{ fontSize: 12, color: \"red\" }}>\r\n      //       {this.state.nameError}\r\n      //     </div>\r\n      //   </div>\r\n      //   <div>\r\n      //     <input\r\n      //       name=\"email\"\r\n      //       placeholder=\"email\"\r\n      //       value={this.state.email}\r\n      //       onChange={this.handleChange}\r\n      //     />\r\n      //     <div style={{ fontSize: 12, color: \"red\" }}>\r\n      //       {this.state.emailError}\r\n      //     </div>\r\n      //   </div>\r\n      //   <div>\r\n      //     <input\r\n      //       type=\"password\"\r\n      //       name=\"password\"\r\n      //       placeholder=\"password\"\r\n      //       value={this.state.password}\r\n      //       onChange={this.handleChange}\r\n      //     />\r\n      //     <div style={{ fontSize: 12, color: \"red\" }}>\r\n      //       {this.state.passwordError}\r\n      //     </div>\r\n      //   </div>\r\n      //   <button type=\"submit\">submit</button>\r\n      // </form>\r\n      \r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}